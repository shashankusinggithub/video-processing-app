services:
  db:
    image: postgres
    env_file:
      - ./db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./db.env
    networks:
      - app_network
    develop:
      watch:
        - action: sync
          path: ./server
          target: /app
        - action: rebuild
          path: ./server/Dockerfile

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
    ports:
      - "3000:3000"
    command: npm start
    networks:
      - app_network
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
        - action: rebuild
          path: ./client/Dockerfile

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - server
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
